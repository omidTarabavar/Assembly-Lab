
AVRASM ver. 2.1.30  D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm Tue Jan 28 00:57:58 2025

D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1090): warning: Register r7 already defined by the .DEF directive
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1091): warning: Register r6 already defined by the .DEF directive
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Din=R5
                 	.DEF _Count=R4
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0049 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1131): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x0
                 
                 _0x0:
000034 6f4e
000035 4420
000036 7461
000037 0061      	.DB  0x4E,0x6F,0x20,0x44,0x61,0x74,0x61,0x0
000038 6f43
000039 6e75
00003a 2074
00003b 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
00003c 6425
D:\Github\Assembly-Lab\CodeVision\Assignment 5\Atmega1\Debug\List\usartInt1.asm(1136): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x25,0x64,0x0
                 _0x2000003:
00003e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003f 0001      	.DW  0x01
000040 0004      	.DW  0x04
000041 0066      	.DW  __REG_VARS*2
                 
000042 0008      	.DW  0x08
000043 0260      	.DW  _0x3
000044 0068      	.DW  _0x0*2
                 
000045 0002      	.DW  0x02
000046 0278      	.DW  __base_y_G100
000047 007c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000048 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000049 94f8      	CLI
00004a 27ee      	CLR  R30
00004b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004c e0f1      	LDI  R31,1
00004d bffb      	OUT  GICR,R31
00004e bfeb      	OUT  GICR,R30
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000050 e08d      	LDI  R24,(14-2)+1
000051 e0a2      	LDI  R26,2
000052 27bb      	CLR  R27
                 __CLEAR_REG:
000053 93ed      	ST   X+,R30
000054 958a      	DEC  R24
000055 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000056 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000057 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000058 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000059 93ed      	ST   X+,R30
00005a 9701      	SBIW R24,1
00005b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005c e7ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005e 9185      	LPM  R24,Z+
00005f 9195      	LPM  R25,Z+
000060 9700      	SBIW R24,0
000061 f061      	BREQ __GLOBAL_INI_END
000062 91a5      	LPM  R26,Z+
000063 91b5      	LPM  R27,Z+
000064 9005      	LPM  R0,Z+
000065 9015      	LPM  R1,Z+
000066 01bf      	MOVW R22,R30
000067 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000068 9005      	LPM  R0,Z+
000069 920d      	ST   X+,R0
00006a 9701      	SBIW R24,1
00006b f7e1      	BRNE __GLOBAL_INI_LOOP
00006c 01fb      	MOVW R30,R22
00006d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 0076 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;char Buf[16];
                 ;char Din,Count=0;
                 ;void main(void) {
                 ; 0000 0007 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0008     UCSRA=0x00;
000076 e0e0      	LDI  R30,LOW(0)
000077 b9eb      	OUT  0xB,R30
                 ; 0000 0009     UCSRB=0x10;
000078 e1e0      	LDI  R30,LOW(16)
000079 b9ea      	OUT  0xA,R30
                 ; 0000 000A     UCSRC=0xA6;
00007a eae6      	LDI  R30,LOW(166)
00007b bde0      	OUT  0x20,R30
                 ; 0000 000B     UBRRH=0x00;
00007c e0e0      	LDI  R30,LOW(0)
00007d bde0      	OUT  0x20,R30
                 ; 0000 000C     UBRRL=0x0C;  // tebghe in 4800 hastesh baud rate
00007e e0ec      	LDI  R30,LOW(12)
00007f b9e9      	OUT  0x9,R30
                 ; 0000 000D     lcd_init(16);
000080 e1a0      	LDI  R26,LOW(16)
000081 d08b      	RCALL _lcd_init
                 ; 0000 000E     lcd_clear();
000082 d058      	RCALL _lcd_clear
                 ; 0000 000F     lcd_puts("No Data");
                +
000083 e6a0     +LDI R26 , LOW ( _0x3 + ( 0 ) )
000084 e0b2     +LDI R27 , HIGH ( _0x3 + ( 0 ) )
                 	__POINTW2MN _0x3,0
000085 d076      	RCALL _lcd_puts
                 ; 0000 0010     while (1){
                 _0x4:
                 ; 0000 0011         Din = getchar();
000086 940e 013a 	CALL _getchar
000088 2e5e      	MOV  R5,R30
                 ; 0000 0012         if(Din == 'C'){
000089 e4e3      	LDI  R30,LOW(67)
00008a 15e5      	CP   R30,R5
00008b f419      	BRNE _0x7
                 ; 0000 0013             lcd_clear();
00008c d04e      	RCALL _lcd_clear
                 ; 0000 0014             Count = 0;
00008d 2444      	CLR  R4
                 ; 0000 0015         }
                 ; 0000 0016         else{
00008e c01d      	RJMP _0x8
                 _0x7:
                 ; 0000 0017             lcd_clear();
00008f d04b      	RCALL _lcd_clear
                 ; 0000 0018             lcd_putchar(Din);
000090 2da5      	MOV  R26,R5
000091 d055      	RCALL _lcd_putchar
                 ; 0000 0019             lcd_gotoxy(0,1);
000092 e0e0      	LDI  R30,LOW(0)
000093 93ea      	ST   -Y,R30
000094 e0a1      	LDI  R26,LOW(1)
000095 d038      	RCALL _lcd_gotoxy
                 ; 0000 001A             Count++;
000096 9443      	INC  R4
                 ; 0000 001B             sprintf(Buf,"Count = %d",Count);
000097 e6e8      	LDI  R30,LOW(_Buf)
000098 e0f2      	LDI  R31,HIGH(_Buf)
000099 93fa      	ST   -Y,R31
00009a 93ea      	ST   -Y,R30
                +
00009b e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
00009c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
00009d 93fa      	ST   -Y,R31
00009e 93ea      	ST   -Y,R30
00009f 2de4      	MOV  R30,R4
0000a0 27ff      	CLR  R31
0000a1 2766      	CLR  R22
0000a2 2777      	CLR  R23
0000a3 940e 0352 	CALL __PUTPARD1
0000a5 e084      	LDI  R24,4
0000a6 940e 02b2 	CALL _sprintf
0000a8 9628      	ADIW R28,8
                 ; 0000 001C             lcd_puts(Buf);
0000a9 e6a8      	LDI  R26,LOW(_Buf)
0000aa e0b2      	LDI  R27,HIGH(_Buf)
0000ab d050      	RCALL _lcd_puts
                 ; 0000 001D         }
                 _0x8:
                 ; 0000 001E 
                 ; 0000 001F 
                 ; 0000 0020     }
0000ac cfd9      	RJMP _0x4
                 ; 0000 0021 }
                 _0x9:
0000ad cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.DSEG
                 _0x3:
000260           	.BYTE 0x8
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000ae 93aa      	ST   -Y,R26
0000af b3eb      	IN   R30,0x1B
0000b0 70ef      	ANDI R30,LOW(0xF)
0000b1 2fae      	MOV  R26,R30
0000b2 81e8      	LD   R30,Y
0000b3 7fe0      	ANDI R30,LOW(0xF0)
0000b4 2bea      	OR   R30,R26
0000b5 bbeb      	OUT  0x1B,R30
                +
0000b6 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000b7 958a     +DEC R24
0000b8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000b9 9ada      	SBI  0x1B,2
                +
0000ba e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000bb 958a     +DEC R24
0000bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000bd 98da      	CBI  0x1B,2
                +
0000be e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000bf 958a     +DEC R24
0000c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000c1 c076      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000c2 93aa      	ST   -Y,R26
0000c3 81a8      	LD   R26,Y
0000c4 dfe9      	RCALL __lcd_write_nibble_G100
0000c5 81e8          ld    r30,y
0000c6 95e2          swap  r30
0000c7 83e8          st    y,r30
0000c8 81a8      	LD   R26,Y
0000c9 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000ca e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000cb 958a     +DEC R24
0000cc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000cd c06a      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000ce 93aa      	ST   -Y,R26
0000cf 81e8      	LD   R30,Y
0000d0 e0f0      	LDI  R31,0
0000d1 58e8      	SUBI R30,LOW(-__base_y_G100)
0000d2 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000d3 81e0      	LD   R30,Z
0000d4 81a9      	LDD  R26,Y+1
0000d5 0fae      	ADD  R26,R30
0000d6 dfeb      	RCALL __lcd_write_data
0000d7 8079      	LDD  R7,Y+1
0000d8 8068      	LDD  R6,Y+0
0000d9 9622      	ADIW R28,2
0000da 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000db e0a2      	LDI  R26,LOW(2)
0000dc 940e 02ff 	CALL SUBOPT_0x0
0000de e0ac      	LDI  R26,LOW(12)
0000df dfe2      	RCALL __lcd_write_data
0000e0 e0a1      	LDI  R26,LOW(1)
0000e1 940e 02ff 	CALL SUBOPT_0x0
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 2e6e      	MOV  R6,R30
0000e5 2e7e      	MOV  R7,R30
0000e6 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000e7 93aa      	ST   -Y,R26
0000e8 81a8      	LD   R26,Y
0000e9 30aa      	CPI  R26,LOW(0xA)
0000ea f011      	BREQ _0x2000005
0000eb 1479      	CP   R7,R9
0000ec f048      	BRLO _0x2000004
                 _0x2000005:
0000ed e0e0      	LDI  R30,LOW(0)
0000ee 93ea      	ST   -Y,R30
0000ef 9463      	INC  R6
0000f0 2da6      	MOV  R26,R6
0000f1 dfdc      	RCALL _lcd_gotoxy
0000f2 81a8      	LD   R26,Y
0000f3 30aa      	CPI  R26,LOW(0xA)
0000f4 f409      	BRNE _0x2000007
0000f5 c042      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0000f6 9473      	INC  R7
0000f7 9ad8      	SBI  0x1B,0
0000f8 81a8      	LD   R26,Y
0000f9 dfc8      	RCALL __lcd_write_data
0000fa 98d8      	CBI  0x1B,0
0000fb c03c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000fc 93ba      	ST   -Y,R27
0000fd 93aa      	ST   -Y,R26
0000fe 931a      	ST   -Y,R17
                 _0x2000008:
0000ff 81a9      	LDD  R26,Y+1
000100 81ba      	LDD  R27,Y+1+1
000101 91ed      	LD   R30,X+
000102 83a9      	STD  Y+1,R26
000103 83ba      	STD  Y+1+1,R27
000104 2f1e      	MOV  R17,R30
000105 30e0      	CPI  R30,0
000106 f019      	BREQ _0x200000A
000107 2fa1      	MOV  R26,R17
000108 dfde      	RCALL _lcd_putchar
000109 cff5      	RJMP _0x2000008
                 _0x200000A:
00010a 8118      	LDD  R17,Y+0
00010b 9623      	ADIW R28,3
00010c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00010d 93aa      	ST   -Y,R26
00010e b3ea      	IN   R30,0x1A
00010f 6fe0      	ORI  R30,LOW(0xF0)
000110 bbea      	OUT  0x1A,R30
000111 9ad2      	SBI  0x1A,2
000112 9ad0      	SBI  0x1A,0
000113 9ad1      	SBI  0x1A,1
000114 98da      	CBI  0x1B,2
000115 98d8      	CBI  0x1B,0
000116 98d9      	CBI  0x1B,1
000117 8098      	LDD  R9,Y+0
000118 81e8      	LD   R30,Y
000119 58e0      	SUBI R30,-LOW(128)
                +
00011a 93e0 027a+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00011c 81e8      	LD   R30,Y
00011d 54e0      	SUBI R30,-LOW(192)
                +
00011e 93e0 027b+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000120 e1a4      	LDI  R26,LOW(20)
000121 e0b0      	LDI  R27,0
000122 940e 0338 	CALL _delay_ms
000124 940e 0305 	CALL SUBOPT_0x1
000126 940e 0305 	CALL SUBOPT_0x1
000128 940e 0305 	CALL SUBOPT_0x1
00012a e2a0      	LDI  R26,LOW(32)
00012b df82      	RCALL __lcd_write_nibble_G100
                +
00012c e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00012d 958a     +DEC R24
00012e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00012f e2a8      	LDI  R26,LOW(40)
000130 df91      	RCALL __lcd_write_data
000131 e0a4      	LDI  R26,LOW(4)
000132 df8f      	RCALL __lcd_write_data
000133 e8a5      	LDI  R26,LOW(133)
000134 df8d      	RCALL __lcd_write_data
000135 e0a6      	LDI  R26,LOW(6)
000136 df8b      	RCALL __lcd_write_data
000137 dfa3      	RCALL _lcd_clear
                 _0x2080002:
000138 9621      	ADIW R28,1
000139 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
00013a 9b5f           sbis usr,rxc
00013b cffe           rjmp getchar0
00013c b1ec           in   r30,udr
00013d 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00013e 93ba      	ST   -Y,R27
00013f 93aa      	ST   -Y,R26
000140 931a      	ST   -Y,R17
000141 930a      	ST   -Y,R16
000142 81aa      	LDD  R26,Y+2
000143 81bb      	LDD  R27,Y+2+1
000144 9612      	ADIW R26,2
000145 940e 034a 	CALL __GETW1P
000147 9730      	SBIW R30,0
000148 f159      	BREQ _0x2020010
000149 81aa      	LDD  R26,Y+2
00014a 81bb      	LDD  R27,Y+2+1
00014b 9614      	ADIW R26,4
00014c 940e 034a 	CALL __GETW1P
00014e 018f      	MOVW R16,R30
00014f 9730      	SBIW R30,0
000150 f061      	BREQ _0x2020012
                +
000151 3002     +CPI R16 , LOW ( 2 )
000152 e0e0     +LDI R30 , HIGH ( 2 )
000153 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000154 f098      	BRLO _0x2020013
000155 01f8      	MOVW R30,R16
000156 9731      	SBIW R30,1
000157 018f      	MOVW R16,R30
                +
000158 81aa     +LDD R26 , Y + 2
000159 81bb     +LDD R27 , Y + 2 + 1
00015a 9614     +ADIW R26 , 4
00015b 93ed     +ST X + , R30
00015c 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00015d 81aa      	LDD  R26,Y+2
00015e 81bb      	LDD  R27,Y+2+1
00015f 9612      	ADIW R26,2
000160 91ed      	LD   R30,X+
000161 91fd      	LD   R31,X+
000162 9631      	ADIW R30,1
000163 93fe      	ST   -X,R31
000164 93ee      	ST   -X,R30
000165 9731      	SBIW R30,1
000166 81ac      	LDD  R26,Y+4
000167 83a0      	STD  Z+0,R26
                 _0x2020013:
000168 81aa      	LDD  R26,Y+2
000169 81bb      	LDD  R27,Y+2+1
00016a 940e 034a 	CALL __GETW1P
00016c 23ff      	TST  R31
00016d f02a      	BRMI _0x2020014
00016e 91ed      	LD   R30,X+
00016f 91fd      	LD   R31,X+
000170 9631      	ADIW R30,1
000171 93fe      	ST   -X,R31
000172 93ee      	ST   -X,R30
                 _0x2020014:
000173 c006      	RJMP _0x2020015
                 _0x2020010:
000174 81aa      	LDD  R26,Y+2
000175 81bb      	LDD  R27,Y+2+1
000176 efef      	LDI  R30,LOW(65535)
000177 efff      	LDI  R31,HIGH(65535)
000178 93ed      	ST   X+,R30
000179 93fc      	ST   X,R31
                 _0x2020015:
00017a 8119      	LDD  R17,Y+1
00017b 8108      	LDD  R16,Y+0
00017c 9625      	ADIW R28,5
00017d 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00017e 93ba      	ST   -Y,R27
00017f 93aa      	ST   -Y,R26
000180 9726      	SBIW R28,6
000181 940e 0357 	CALL __SAVELOCR6
000183 e010      	LDI  R17,0
000184 85ac      	LDD  R26,Y+12
000185 85bd      	LDD  R27,Y+12+1
000186 e0e0      	LDI  R30,LOW(0)
000187 e0f0      	LDI  R31,HIGH(0)
000188 93ed      	ST   X+,R30
000189 93fc      	ST   X,R31
                 _0x2020016:
00018a 89ea      	LDD  R30,Y+18
00018b 89fb      	LDD  R31,Y+18+1
00018c 9631      	ADIW R30,1
00018d 8bea      	STD  Y+18,R30
00018e 8bfb      	STD  Y+18+1,R31
00018f 9731      	SBIW R30,1
000190 91e4      	LPM  R30,Z
000191 2f2e      	MOV  R18,R30
000192 30e0      	CPI  R30,0
000193 f409      	BRNE PC+2
000194 c115      	RJMP _0x2020018
000195 2fe1      	MOV  R30,R17
000196 30e0      	CPI  R30,0
000197 f439      	BRNE _0x202001C
000198 3225      	CPI  R18,37
000199 f411      	BRNE _0x202001D
00019a e011      	LDI  R17,LOW(1)
00019b c002      	RJMP _0x202001E
                 _0x202001D:
00019c 940e 030c 	CALL SUBOPT_0x2
                 _0x202001E:
00019e c10a      	RJMP _0x202001B
                 _0x202001C:
00019f 30e1      	CPI  R30,LOW(0x1)
0001a0 f4a9      	BRNE _0x202001F
0001a1 3225      	CPI  R18,37
0001a2 f419      	BRNE _0x2020020
0001a3 940e 030c 	CALL SUBOPT_0x2
0001a5 c102      	RJMP _0x20200CC
                 _0x2020020:
0001a6 e012      	LDI  R17,LOW(2)
0001a7 e040      	LDI  R20,LOW(0)
0001a8 e000      	LDI  R16,LOW(0)
0001a9 322d      	CPI  R18,45
0001aa f411      	BRNE _0x2020021
0001ab e001      	LDI  R16,LOW(1)
0001ac c0fc      	RJMP _0x202001B
                 _0x2020021:
0001ad 322b      	CPI  R18,43
0001ae f411      	BRNE _0x2020022
0001af e24b      	LDI  R20,LOW(43)
0001b0 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001b1 3220      	CPI  R18,32
0001b2 f411      	BRNE _0x2020023
0001b3 e240      	LDI  R20,LOW(32)
0001b4 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001b5 c002      	RJMP _0x2020024
                 _0x202001F:
0001b6 30e2      	CPI  R30,LOW(0x2)
0001b7 f439      	BRNE _0x2020025
                 _0x2020024:
0001b8 e050      	LDI  R21,LOW(0)
0001b9 e013      	LDI  R17,LOW(3)
0001ba 3320      	CPI  R18,48
0001bb f411      	BRNE _0x2020026
0001bc 6800      	ORI  R16,LOW(128)
0001bd c0eb      	RJMP _0x202001B
                 _0x2020026:
0001be c003      	RJMP _0x2020027
                 _0x2020025:
0001bf 30e3      	CPI  R30,LOW(0x3)
0001c0 f009      	BREQ PC+2
0001c1 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001c2 3320      	CPI  R18,48
0001c3 f010      	BRLO _0x202002A
0001c4 332a      	CPI  R18,58
0001c5 f008      	BRLO _0x202002B
                 _0x202002A:
0001c6 c007      	RJMP _0x2020029
                 _0x202002B:
0001c7 e0aa      	LDI  R26,LOW(10)
0001c8 9f5a      	MUL  R21,R26
0001c9 2d50      	MOV  R21,R0
0001ca 2fe2      	MOV  R30,R18
0001cb 53e0      	SUBI R30,LOW(48)
0001cc 0f5e      	ADD  R21,R30
0001cd c0db      	RJMP _0x202001B
                 _0x2020029:
0001ce 2fe2      	MOV  R30,R18
0001cf 36e3      	CPI  R30,LOW(0x63)
0001d0 f449      	BRNE _0x202002F
0001d1 940e 0313 	CALL SUBOPT_0x3
0001d3 89e8      	LDD  R30,Y+16
0001d4 89f9      	LDD  R31,Y+16+1
0001d5 81a4      	LDD  R26,Z+4
0001d6 93aa      	ST   -Y,R26
0001d7 940e 0319 	CALL SUBOPT_0x4
0001d9 c0ce      	RJMP _0x2020030
                 _0x202002F:
0001da 37e3      	CPI  R30,LOW(0x73)
0001db f441      	BRNE _0x2020032
0001dc 940e 0313 	CALL SUBOPT_0x3
0001de 940e 031f 	CALL SUBOPT_0x5
0001e0 940e 02e6 	CALL _strlen
0001e2 2f1e      	MOV  R17,R30
0001e3 c00a      	RJMP _0x2020033
                 _0x2020032:
0001e4 37e0      	CPI  R30,LOW(0x70)
0001e5 f461      	BRNE _0x2020035
0001e6 940e 0313 	CALL SUBOPT_0x3
0001e8 940e 031f 	CALL SUBOPT_0x5
0001ea 940e 02f2 	CALL _strlenf
0001ec 2f1e      	MOV  R17,R30
0001ed 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001ee 6002      	ORI  R16,LOW(2)
0001ef 770f      	ANDI R16,LOW(127)
0001f0 e030      	LDI  R19,LOW(0)
0001f1 c034      	RJMP _0x2020036
                 _0x2020035:
0001f2 36e4      	CPI  R30,LOW(0x64)
0001f3 f011      	BREQ _0x2020039
0001f4 36e9      	CPI  R30,LOW(0x69)
0001f5 f411      	BRNE _0x202003A
                 _0x2020039:
0001f6 6004      	ORI  R16,LOW(4)
0001f7 c002      	RJMP _0x202003B
                 _0x202003A:
0001f8 37e5      	CPI  R30,LOW(0x75)
0001f9 f431      	BRNE _0x202003C
                 _0x202003B:
0001fa e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001fb e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001fc 83ee      	STD  Y+6,R30
0001fd 83ff      	STD  Y+6+1,R31
0001fe e015      	LDI  R17,LOW(5)
0001ff c00c      	RJMP _0x202003D
                 _0x202003C:
000200 35e8      	CPI  R30,LOW(0x58)
000201 f411      	BRNE _0x202003F
000202 6008      	ORI  R16,LOW(8)
000203 c003      	RJMP _0x2020040
                 _0x202003F:
000204 37e8      	CPI  R30,LOW(0x78)
000205 f009      	BREQ PC+2
000206 c0a1      	RJMP _0x2020071
                 _0x2020040:
000207 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000208 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000209 83ee      	STD  Y+6,R30
00020a 83ff      	STD  Y+6+1,R31
00020b e014      	LDI  R17,LOW(4)
                 _0x202003D:
00020c ff02      	SBRS R16,2
00020d c014      	RJMP _0x2020042
00020e 940e 0313 	CALL SUBOPT_0x3
000210 940e 0329 	CALL SUBOPT_0x6
000212 85ab      	LDD  R26,Y+11
000213 23aa      	TST  R26
000214 f43a      	BRPL _0x2020043
000215 85ea      	LDD  R30,Y+10
000216 85fb      	LDD  R31,Y+10+1
000217 940e 0346 	CALL __ANEGW1
000219 87ea      	STD  Y+10,R30
00021a 87fb      	STD  Y+10+1,R31
00021b e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00021c 3040      	CPI  R20,0
00021d f011      	BREQ _0x2020044
00021e 5f1f      	SUBI R17,-LOW(1)
00021f c001      	RJMP _0x2020045
                 _0x2020044:
000220 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000221 c004      	RJMP _0x2020046
                 _0x2020042:
000222 940e 0313 	CALL SUBOPT_0x3
000224 940e 0329 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000226 fd00      	SBRC R16,0
000227 c011      	RJMP _0x2020047
                 _0x2020048:
000228 1715      	CP   R17,R21
000229 f478      	BRSH _0x202004A
00022a ff07      	SBRS R16,7
00022b c008      	RJMP _0x202004B
00022c ff02      	SBRS R16,2
00022d c004      	RJMP _0x202004C
00022e 7f0b      	ANDI R16,LOW(251)
00022f 2f24      	MOV  R18,R20
000230 5011      	SUBI R17,LOW(1)
000231 c001      	RJMP _0x202004D
                 _0x202004C:
000232 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000233 c001      	RJMP _0x202004E
                 _0x202004B:
000234 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000235 940e 030c 	CALL SUBOPT_0x2
000237 5051      	SUBI R21,LOW(1)
000238 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000239 2f31      	MOV  R19,R17
00023a ff01      	SBRS R16,1
00023b c017      	RJMP _0x202004F
                 _0x2020050:
00023c 3030      	CPI  R19,0
00023d f0a1      	BREQ _0x2020052
00023e ff03      	SBRS R16,3
00023f c006      	RJMP _0x2020053
000240 81ee      	LDD  R30,Y+6
000241 81ff      	LDD  R31,Y+6+1
000242 9125      	LPM  R18,Z+
000243 83ee      	STD  Y+6,R30
000244 83ff      	STD  Y+6+1,R31
000245 c005      	RJMP _0x2020054
                 _0x2020053:
000246 81ae      	LDD  R26,Y+6
000247 81bf      	LDD  R27,Y+6+1
000248 912d      	LD   R18,X+
000249 83ae      	STD  Y+6,R26
00024a 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00024b 940e 030c 	CALL SUBOPT_0x2
00024d 3050      	CPI  R21,0
00024e f009      	BREQ _0x2020055
00024f 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000250 5031      	SUBI R19,LOW(1)
000251 cfea      	RJMP _0x2020050
                 _0x2020052:
000252 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000253 e320      	LDI  R18,LOW(48)
000254 81ee      	LDD  R30,Y+6
000255 81ff      	LDD  R31,Y+6+1
000256 940e 034e 	CALL __GETW1PF
000258 87e8      	STD  Y+8,R30
000259 87f9      	STD  Y+8+1,R31
00025a 81ee      	LDD  R30,Y+6
00025b 81ff      	LDD  R31,Y+6+1
00025c 9632      	ADIW R30,2
00025d 83ee      	STD  Y+6,R30
00025e 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00025f 85e8      	LDD  R30,Y+8
000260 85f9      	LDD  R31,Y+8+1
000261 85aa      	LDD  R26,Y+10
000262 85bb      	LDD  R27,Y+10+1
000263 17ae      	CP   R26,R30
000264 07bf      	CPC  R27,R31
000265 f050      	BRLO _0x202005C
000266 5f2f      	SUBI R18,-LOW(1)
000267 85a8      	LDD  R26,Y+8
000268 85b9      	LDD  R27,Y+8+1
000269 85ea      	LDD  R30,Y+10
00026a 85fb      	LDD  R31,Y+10+1
00026b 1bea      	SUB  R30,R26
00026c 0bfb      	SBC  R31,R27
00026d 87ea      	STD  Y+10,R30
00026e 87fb      	STD  Y+10+1,R31
00026f cfef      	RJMP _0x202005A
                 _0x202005C:
000270 332a      	CPI  R18,58
000271 f028      	BRLO _0x202005D
000272 ff03      	SBRS R16,3
000273 c002      	RJMP _0x202005E
000274 5f29      	SUBI R18,-LOW(7)
000275 c001      	RJMP _0x202005F
                 _0x202005E:
000276 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000277 fd04      	SBRC R16,4
000278 c01a      	RJMP _0x2020061
000279 3321      	CPI  R18,49
00027a f420      	BRSH _0x2020063
00027b 85a8      	LDD  R26,Y+8
00027c 85b9      	LDD  R27,Y+8+1
00027d 9711      	SBIW R26,1
00027e f409      	BRNE _0x2020062
                 _0x2020063:
00027f c009      	RJMP _0x20200CD
                 _0x2020062:
000280 1753      	CP   R21,R19
000281 f010      	BRLO _0x2020067
000282 ff00      	SBRS R16,0
000283 c001      	RJMP _0x2020068
                 _0x2020067:
000284 c013      	RJMP _0x2020066
                 _0x2020068:
000285 e220      	LDI  R18,LOW(32)
000286 ff07      	SBRS R16,7
000287 c00b      	RJMP _0x2020069
000288 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000289 6100      	ORI  R16,LOW(16)
00028a ff02      	SBRS R16,2
00028b c007      	RJMP _0x202006A
00028c 7f0b      	ANDI R16,LOW(251)
00028d 934a      	ST   -Y,R20
00028e 940e 0319 	CALL SUBOPT_0x4
000290 3050      	CPI  R21,0
000291 f009      	BREQ _0x202006B
000292 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000293 940e 030c 	CALL SUBOPT_0x2
000295 3050      	CPI  R21,0
000296 f009      	BREQ _0x202006C
000297 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000298 5031      	SUBI R19,LOW(1)
000299 85a8      	LDD  R26,Y+8
00029a 85b9      	LDD  R27,Y+8+1
00029b 9712      	SBIW R26,2
00029c f008      	BRLO _0x2020059
00029d cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00029e ff00      	SBRS R16,0
00029f c008      	RJMP _0x202006D
                 _0x202006E:
0002a0 3050      	CPI  R21,0
0002a1 f031      	BREQ _0x2020070
0002a2 5051      	SUBI R21,LOW(1)
0002a3 e2e0      	LDI  R30,LOW(32)
0002a4 93ea      	ST   -Y,R30
0002a5 940e 0319 	CALL SUBOPT_0x4
0002a7 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002a8 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002a9 cee0      	RJMP _0x2020016
                 _0x2020018:
0002aa 85ac      	LDD  R26,Y+12
0002ab 85bd      	LDD  R27,Y+12+1
0002ac 940e 034a 	CALL __GETW1P
0002ae 940e 035e 	CALL __LOADLOCR6
0002b0 9664      	ADIW R28,20
0002b1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002b2 92ff      	PUSH R15
0002b3 2ef8      	MOV  R15,R24
0002b4 9726      	SBIW R28,6
0002b5 940e 0359 	CALL __SAVELOCR4
0002b7 940e 0331 	CALL SUBOPT_0x7
0002b9 9730      	SBIW R30,0
0002ba f419      	BRNE _0x2020072
0002bb efef      	LDI  R30,LOW(65535)
0002bc efff      	LDI  R31,HIGH(65535)
0002bd c023      	RJMP _0x2080001
                 _0x2020072:
0002be 01de      	MOVW R26,R28
0002bf 9616      	ADIW R26,6
0002c0 940e 0342 	CALL __ADDW2R15
0002c2 018d      	MOVW R16,R26
0002c3 940e 0331 	CALL SUBOPT_0x7
0002c5 83ee      	STD  Y+6,R30
0002c6 83ff      	STD  Y+6+1,R31
0002c7 e0e0      	LDI  R30,LOW(0)
0002c8 87e8      	STD  Y+8,R30
0002c9 87e9      	STD  Y+8+1,R30
0002ca 01de      	MOVW R26,R28
0002cb 961a      	ADIW R26,10
0002cc 940e 0342 	CALL __ADDW2R15
0002ce 940e 034a 	CALL __GETW1P
0002d0 93fa      	ST   -Y,R31
0002d1 93ea      	ST   -Y,R30
0002d2 931a      	ST   -Y,R17
0002d3 930a      	ST   -Y,R16
0002d4 e3ee      	LDI  R30,LOW(_put_buff_G101)
0002d5 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002d6 93fa      	ST   -Y,R31
0002d7 93ea      	ST   -Y,R30
0002d8 01de      	MOVW R26,R28
0002d9 961a      	ADIW R26,10
0002da dea3      	RCALL __print_G101
0002db 019f      	MOVW R18,R30
0002dc 81ae      	LDD  R26,Y+6
0002dd 81bf      	LDD  R27,Y+6+1
0002de e0e0      	LDI  R30,LOW(0)
0002df 93ec      	ST   X,R30
0002e0 01f9      	MOVW R30,R18
                 _0x2080001:
0002e1 940e 0360 	CALL __LOADLOCR4
0002e3 962a      	ADIW R28,10
0002e4 90ff      	POP  R15
0002e5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002e6 93ba      	ST   -Y,R27
0002e7 93aa      	ST   -Y,R26
0002e8 91a9          ld   r26,y+
0002e9 91b9          ld   r27,y+
0002ea 27ee          clr  r30
0002eb 27ff          clr  r31
                 strlen0:
0002ec 916d          ld   r22,x+
0002ed 2366          tst  r22
0002ee f011          breq strlen1
0002ef 9631          adiw r30,1
0002f0 cffb          rjmp strlen0
                 strlen1:
0002f1 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002f2 93ba      	ST   -Y,R27
0002f3 93aa      	ST   -Y,R26
0002f4 27aa          clr  r26
0002f5 27bb          clr  r27
0002f6 91e9          ld   r30,y+
0002f7 91f9          ld   r31,y+
                 strlenf0:
0002f8 9005      	lpm  r0,z+
0002f9 2000          tst  r0
0002fa f011          breq strlenf1
0002fb 9611          adiw r26,1
0002fc cffb          rjmp strlenf0
                 strlenf1:
0002fd 01fd          movw r30,r26
0002fe 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _Buf:
000268           	.BYTE 0x10
                 __base_y_G100:
000278           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002ff 940e 00c2 	CALL __lcd_write_data
000301 e0a3      	LDI  R26,LOW(3)
000302 e0b0      	LDI  R27,0
000303 940c 0338 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000305 e3a0      	LDI  R26,LOW(48)
000306 940e 00ae 	CALL __lcd_write_nibble_G100
                +
000308 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000309 958a     +DEC R24
00030a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00030b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
00030c 932a      	ST   -Y,R18
00030d 85ad      	LDD  R26,Y+13
00030e 85be      	LDD  R27,Y+13+1
00030f 85ef      	LDD  R30,Y+15
000310 89f8      	LDD  R31,Y+15+1
000311 9509      	ICALL
000312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000313 89e8      	LDD  R30,Y+16
000314 89f9      	LDD  R31,Y+16+1
000315 9734      	SBIW R30,4
000316 8be8      	STD  Y+16,R30
000317 8bf9      	STD  Y+16+1,R31
000318 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000319 85ad      	LDD  R26,Y+13
00031a 85be      	LDD  R27,Y+13+1
00031b 85ef      	LDD  R30,Y+15
00031c 89f8      	LDD  R31,Y+15+1
00031d 9509      	ICALL
00031e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
00031f 89a8      	LDD  R26,Y+16
000320 89b9      	LDD  R27,Y+16+1
000321 9614      	ADIW R26,4
000322 940e 034a 	CALL __GETW1P
000324 83ee      	STD  Y+6,R30
000325 83ff      	STD  Y+6+1,R31
000326 81ae      	LDD  R26,Y+6
000327 81bf      	LDD  R27,Y+6+1
000328 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000329 89a8      	LDD  R26,Y+16
00032a 89b9      	LDD  R27,Y+16+1
00032b 9614      	ADIW R26,4
00032c 940e 034a 	CALL __GETW1P
00032e 87ea      	STD  Y+10,R30
00032f 87fb      	STD  Y+10+1,R31
000330 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000331 01de      	MOVW R26,R28
000332 961c      	ADIW R26,12
000333 940e 0342 	CALL __ADDW2R15
000335 940e 034a 	CALL __GETW1P
000337 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000338 9610      	adiw r26,0
000339 f039      	breq __delay_ms1
                 __delay_ms0:
00033a 95a8      	wdr
                +
00033b ef8a     +LDI R24 , LOW ( 0xFA )
00033c e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00033d 9701     +SBIW R24 , 1
00033e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00033f 9711      	sbiw r26,1
000340 f7c9      	brne __delay_ms0
                 __delay_ms1:
000341 9508      	ret
                 
                 __ADDW2R15:
000342 2400      	CLR  R0
000343 0daf      	ADD  R26,R15
000344 1db0      	ADC  R27,R0
000345 9508      	RET
                 
                 __ANEGW1:
000346 95f1      	NEG  R31
000347 95e1      	NEG  R30
000348 40f0      	SBCI R31,0
000349 9508      	RET
                 
                 __GETW1P:
00034a 91ed      	LD   R30,X+
00034b 91fc      	LD   R31,X
00034c 9711      	SBIW R26,1
00034d 9508      	RET
                 
                 __GETW1PF:
00034e 9005      	LPM  R0,Z+
00034f 91f4      	LPM  R31,Z
000350 2de0      	MOV  R30,R0
000351 9508      	RET
                 
                 __PUTPARD1:
000352 937a      	ST   -Y,R23
000353 936a      	ST   -Y,R22
000354 93fa      	ST   -Y,R31
000355 93ea      	ST   -Y,R30
000356 9508      	RET
                 
                 __SAVELOCR6:
000357 935a      	ST   -Y,R21
                 __SAVELOCR5:
000358 934a      	ST   -Y,R20
                 __SAVELOCR4:
000359 933a      	ST   -Y,R19
                 __SAVELOCR3:
00035a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00035b 931a      	ST   -Y,R17
00035c 930a      	ST   -Y,R16
00035d 9508      	RET
                 
                 __LOADLOCR6:
00035e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00035f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000360 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000361 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000362 8119      	LDD  R17,Y+1
000363 8108      	LD   R16,Y
000364 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   3 r5 :   3 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   3 r26:  99 r27:  38 r28:  14 r29:   1 r30: 161 r31:  58 
x  :  23 y  : 166 z  :  15 
Registers used: 27 out of 35 (77.1%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  31 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  49 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   3 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  91 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  20 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  13 pop   :   1 push  :   1 rcall :  22 ret   :  25 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   1 sbiw  :  17 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006ca   1676     62   1738   32768   5.3%
[.dseg] 0x000060 0x00027c      0     28     28    2048   1.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
