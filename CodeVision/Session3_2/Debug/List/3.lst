
AVRASM ver. 2.1.30  F:\Github\Assembly-Lab\CodeVision\Session3_2\Debug\List\3.asm Sun Oct 27 14:54:05 2024

F:\Github\Assembly-Lab\CodeVision\Session3_2\Debug\List\3.asm(1088): warning: Register r5 already defined by the .DEF directive
F:\Github\Assembly-Lab\CodeVision\Session3_2\Debug\List\3.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\Github\Assembly-Lab\CodeVision\Session3_2\Debug\List\3.asm(1090): warning: Register r7 already defined by the .DEF directive
F:\Github\Assembly-Lab\CodeVision\Session3_2\Debug\List\3.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Data=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0047 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7453
000034 7261
000035 0074
000036 6425      	.DB  0x53,0x74,0x61,0x72,0x74,0x0,0x25,0x64
000037 4300
000038 756f
000039 746e
00003a 6e69      	.DB  0x0,0x43,0x6F,0x75,0x6E,0x74,0x69,0x6E
00003b 0067      	.DB  0x67,0x0
                 _0x2000003:
00003c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003d 0006      	.DW  0x06
00003e 0260      	.DW  _0x3
00003f 0066      	.DW  _0x0*2
                 
000040 0009      	.DW  0x09
000041 0266      	.DW  _0x3+6
000042 006f      	.DW  _0x0*2+9
                 
000043 0002      	.DW  0x02
000044 028f      	.DW  __base_y_G100
000045 0078      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000046 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000047 94f8      	CLI
000048 27ee      	CLR  R30
000049 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004a e0f1      	LDI  R31,1
00004b bffb      	OUT  GICR,R31
00004c bfeb      	OUT  GICR,R30
00004d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 940c 0074 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * 3.c
                 ; *
                 ; * Created: 10/27/2024 2:52:04 PM
                 ; * Author: omidt
                 ; */
                 ;
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;char Data;
                 ;char Buf[32];
                 ;void main(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0011     lcd_init(16);
000074 e1a0      	LDI  R26,LOW(16)
000075 d08c      	RCALL _lcd_init
                 ; 0000 0012      lcd_clear();
000076 d059      	RCALL _lcd_clear
                 ; 0000 0013      lcd_puts("Start");
                +
000077 e6a0     +LDI R26 , LOW ( _0x3 + ( 0 ) )
000078 e0b2     +LDI R27 , HIGH ( _0x3 + ( 0 ) )
                 	__POINTW2MN _0x3,0
000079 d077      	RCALL _lcd_puts
                 ; 0000 0014      delay_ms(5000);
00007a e8a8      	LDI  R26,LOW(5000)
00007b e1b3      	LDI  R27,HIGH(5000)
00007c 940e 0329 	CALL _delay_ms
                 ; 0000 0015      lcd_clear();
00007e d051      	RCALL _lcd_clear
                 ; 0000 0016     while (1)
                 _0x4:
                 ; 0000 0017     {
                 ; 0000 0018         // Please write your application code here
                 ; 0000 0019         sprintf(Buf,"%d",Data);
00007f e6ef      	LDI  R30,LOW(_Buf)
000080 e0f2      	LDI  R31,HIGH(_Buf)
000081 93fa      	ST   -Y,R31
000082 93ea      	ST   -Y,R30
                +
000083 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000084 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000085 93fa      	ST   -Y,R31
000086 93ea      	ST   -Y,R30
000087 2de5      	MOV  R30,R5
000088 27ff      	CLR  R31
000089 2766      	CLR  R22
00008a 2777      	CLR  R23
00008b 940e 0343 	CALL __PUTPARD1
00008d e084      	LDI  R24,4
00008e 940e 02a3 	CALL _sprintf
000090 9628      	ADIW R28,8
                 ; 0000 001A         lcd_puts("Counting");
                +
000091 e6a6     +LDI R26 , LOW ( _0x3 + ( 6 ) )
000092 e0b2     +LDI R27 , HIGH ( _0x3 + ( 6 ) )
                 	__POINTW2MN _0x3,6
000093 d05d      	RCALL _lcd_puts
                 ; 0000 001B         lcd_gotoxy(0,1);
000094 e0e0      	LDI  R30,LOW(0)
000095 93ea      	ST   -Y,R30
000096 e0a1      	LDI  R26,LOW(1)
000097 d02b      	RCALL _lcd_gotoxy
                 ; 0000 001C         lcd_puts(Buf);
000098 e6af      	LDI  R26,LOW(_Buf)
000099 e0b2      	LDI  R27,HIGH(_Buf)
00009a d056      	RCALL _lcd_puts
                 ; 0000 001D         Data++;
00009b 9453      	INC  R5
                 ; 0000 001E         delay_ms(1000);
00009c eea8      	LDI  R26,LOW(1000)
00009d e0b3      	LDI  R27,HIGH(1000)
00009e 940e 0329 	CALL _delay_ms
                 ; 0000 001F         lcd_clear();
0000a0 d02f      	RCALL _lcd_clear
                 ; 0000 0020     }
0000a1 cfdd      	RJMP _0x4
                 ; 0000 0021 }
                 _0x7:
0000a2 cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x3:
000260           	.BYTE 0xF
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000a3 93aa      	ST   -Y,R26
0000a4 b3eb      	IN   R30,0x1B
0000a5 70ef      	ANDI R30,LOW(0xF)
0000a6 2fae      	MOV  R26,R30
0000a7 81e8      	LD   R30,Y
0000a8 7fe0      	ANDI R30,LOW(0xF0)
0000a9 2bea      	OR   R30,R26
0000aa bbeb      	OUT  0x1B,R30
                +
0000ab e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000ac 958a     +DEC R24
0000ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000ae 9ada      	SBI  0x1B,2
                +
0000af e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000b0 958a     +DEC R24
0000b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000b2 98da      	CBI  0x1B,2
                +
0000b3 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000b4 958a     +DEC R24
0000b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000b6 c076      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000b7 93aa      	ST   -Y,R26
0000b8 81a8      	LD   R26,Y
0000b9 dfe9      	RCALL __lcd_write_nibble_G100
0000ba 81e8          ld    r30,y
0000bb 95e2          swap  r30
0000bc 83e8          st    y,r30
0000bd 81a8      	LD   R26,Y
0000be dfe4      	RCALL __lcd_write_nibble_G100
                +
0000bf e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000c0 958a     +DEC R24
0000c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000c2 c06a      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000c3 93aa      	ST   -Y,R26
0000c4 81e8      	LD   R30,Y
0000c5 e0f0      	LDI  R31,0
0000c6 57e1      	SUBI R30,LOW(-__base_y_G100)
0000c7 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000c8 81e0      	LD   R30,Z
0000c9 81a9      	LDD  R26,Y+1
0000ca 0fae      	ADD  R26,R30
0000cb dfeb      	RCALL __lcd_write_data
0000cc 8049      	LDD  R4,Y+1
0000cd 8078      	LDD  R7,Y+0
0000ce 9622      	ADIW R28,2
0000cf 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000d0 e0a2      	LDI  R26,LOW(2)
0000d1 940e 02f0 	CALL SUBOPT_0x0
0000d3 e0ac      	LDI  R26,LOW(12)
0000d4 dfe2      	RCALL __lcd_write_data
0000d5 e0a1      	LDI  R26,LOW(1)
0000d6 940e 02f0 	CALL SUBOPT_0x0
0000d8 e0e0      	LDI  R30,LOW(0)
0000d9 2e7e      	MOV  R7,R30
0000da 2e4e      	MOV  R4,R30
0000db 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000dc 93aa      	ST   -Y,R26
0000dd 81a8      	LD   R26,Y
0000de 30aa      	CPI  R26,LOW(0xA)
0000df f011      	BREQ _0x2000005
0000e0 1446      	CP   R4,R6
0000e1 f048      	BRLO _0x2000004
                 _0x2000005:
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 93ea      	ST   -Y,R30
0000e4 9473      	INC  R7
0000e5 2da7      	MOV  R26,R7
0000e6 dfdc      	RCALL _lcd_gotoxy
0000e7 81a8      	LD   R26,Y
0000e8 30aa      	CPI  R26,LOW(0xA)
0000e9 f409      	BRNE _0x2000007
0000ea c042      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0000eb 9443      	INC  R4
0000ec 9ad8      	SBI  0x1B,0
0000ed 81a8      	LD   R26,Y
0000ee dfc8      	RCALL __lcd_write_data
0000ef 98d8      	CBI  0x1B,0
0000f0 c03c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000f1 93ba      	ST   -Y,R27
0000f2 93aa      	ST   -Y,R26
0000f3 931a      	ST   -Y,R17
                 _0x2000008:
0000f4 81a9      	LDD  R26,Y+1
0000f5 81ba      	LDD  R27,Y+1+1
0000f6 91ed      	LD   R30,X+
0000f7 83a9      	STD  Y+1,R26
0000f8 83ba      	STD  Y+1+1,R27
0000f9 2f1e      	MOV  R17,R30
0000fa 30e0      	CPI  R30,0
0000fb f019      	BREQ _0x200000A
0000fc 2fa1      	MOV  R26,R17
0000fd dfde      	RCALL _lcd_putchar
0000fe cff5      	RJMP _0x2000008
                 _0x200000A:
0000ff 8118      	LDD  R17,Y+0
000100 9623      	ADIW R28,3
000101 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000102 93aa      	ST   -Y,R26
000103 b3ea      	IN   R30,0x1A
000104 6fe0      	ORI  R30,LOW(0xF0)
000105 bbea      	OUT  0x1A,R30
000106 9ad2      	SBI  0x1A,2
000107 9ad0      	SBI  0x1A,0
000108 9ad1      	SBI  0x1A,1
000109 98da      	CBI  0x1B,2
00010a 98d8      	CBI  0x1B,0
00010b 98d9      	CBI  0x1B,1
00010c 8068      	LDD  R6,Y+0
00010d 81e8      	LD   R30,Y
00010e 58e0      	SUBI R30,-LOW(128)
                +
00010f 93e0 0291+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000111 81e8      	LD   R30,Y
000112 54e0      	SUBI R30,-LOW(192)
                +
000113 93e0 0292+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000115 e1a4      	LDI  R26,LOW(20)
000116 e0b0      	LDI  R27,0
000117 940e 0329 	CALL _delay_ms
000119 940e 02f6 	CALL SUBOPT_0x1
00011b 940e 02f6 	CALL SUBOPT_0x1
00011d 940e 02f6 	CALL SUBOPT_0x1
00011f e2a0      	LDI  R26,LOW(32)
000120 df82      	RCALL __lcd_write_nibble_G100
                +
000121 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000122 958a     +DEC R24
000123 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000124 e2a8      	LDI  R26,LOW(40)
000125 df91      	RCALL __lcd_write_data
000126 e0a4      	LDI  R26,LOW(4)
000127 df8f      	RCALL __lcd_write_data
000128 e8a5      	LDI  R26,LOW(133)
000129 df8d      	RCALL __lcd_write_data
00012a e0a6      	LDI  R26,LOW(6)
00012b df8b      	RCALL __lcd_write_data
00012c dfa3      	RCALL _lcd_clear
                 _0x2080002:
00012d 9621      	ADIW R28,1
00012e 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00012f 93ba      	ST   -Y,R27
000130 93aa      	ST   -Y,R26
000131 931a      	ST   -Y,R17
000132 930a      	ST   -Y,R16
000133 81aa      	LDD  R26,Y+2
000134 81bb      	LDD  R27,Y+2+1
000135 9612      	ADIW R26,2
000136 940e 033b 	CALL __GETW1P
000138 9730      	SBIW R30,0
000139 f159      	BREQ _0x2020010
00013a 81aa      	LDD  R26,Y+2
00013b 81bb      	LDD  R27,Y+2+1
00013c 9614      	ADIW R26,4
00013d 940e 033b 	CALL __GETW1P
00013f 018f      	MOVW R16,R30
000140 9730      	SBIW R30,0
000141 f061      	BREQ _0x2020012
                +
000142 3002     +CPI R16 , LOW ( 2 )
000143 e0e0     +LDI R30 , HIGH ( 2 )
000144 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000145 f098      	BRLO _0x2020013
000146 01f8      	MOVW R30,R16
000147 9731      	SBIW R30,1
000148 018f      	MOVW R16,R30
                +
000149 81aa     +LDD R26 , Y + 2
00014a 81bb     +LDD R27 , Y + 2 + 1
00014b 9614     +ADIW R26 , 4
00014c 93ed     +ST X + , R30
00014d 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00014e 81aa      	LDD  R26,Y+2
00014f 81bb      	LDD  R27,Y+2+1
000150 9612      	ADIW R26,2
000151 91ed      	LD   R30,X+
000152 91fd      	LD   R31,X+
000153 9631      	ADIW R30,1
000154 93fe      	ST   -X,R31
000155 93ee      	ST   -X,R30
000156 9731      	SBIW R30,1
000157 81ac      	LDD  R26,Y+4
000158 83a0      	STD  Z+0,R26
                 _0x2020013:
000159 81aa      	LDD  R26,Y+2
00015a 81bb      	LDD  R27,Y+2+1
00015b 940e 033b 	CALL __GETW1P
00015d 23ff      	TST  R31
00015e f02a      	BRMI _0x2020014
00015f 91ed      	LD   R30,X+
000160 91fd      	LD   R31,X+
000161 9631      	ADIW R30,1
000162 93fe      	ST   -X,R31
000163 93ee      	ST   -X,R30
                 _0x2020014:
000164 c006      	RJMP _0x2020015
                 _0x2020010:
000165 81aa      	LDD  R26,Y+2
000166 81bb      	LDD  R27,Y+2+1
000167 efef      	LDI  R30,LOW(65535)
000168 efff      	LDI  R31,HIGH(65535)
000169 93ed      	ST   X+,R30
00016a 93fc      	ST   X,R31
                 _0x2020015:
00016b 8119      	LDD  R17,Y+1
00016c 8108      	LDD  R16,Y+0
00016d 9625      	ADIW R28,5
00016e 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00016f 93ba      	ST   -Y,R27
000170 93aa      	ST   -Y,R26
000171 9726      	SBIW R28,6
000172 940e 0348 	CALL __SAVELOCR6
000174 e010      	LDI  R17,0
000175 85ac      	LDD  R26,Y+12
000176 85bd      	LDD  R27,Y+12+1
000177 e0e0      	LDI  R30,LOW(0)
000178 e0f0      	LDI  R31,HIGH(0)
000179 93ed      	ST   X+,R30
00017a 93fc      	ST   X,R31
                 _0x2020016:
00017b 89ea      	LDD  R30,Y+18
00017c 89fb      	LDD  R31,Y+18+1
00017d 9631      	ADIW R30,1
00017e 8bea      	STD  Y+18,R30
00017f 8bfb      	STD  Y+18+1,R31
000180 9731      	SBIW R30,1
000181 91e4      	LPM  R30,Z
000182 2f2e      	MOV  R18,R30
000183 30e0      	CPI  R30,0
000184 f409      	BRNE PC+2
000185 c115      	RJMP _0x2020018
000186 2fe1      	MOV  R30,R17
000187 30e0      	CPI  R30,0
000188 f439      	BRNE _0x202001C
000189 3225      	CPI  R18,37
00018a f411      	BRNE _0x202001D
00018b e011      	LDI  R17,LOW(1)
00018c c002      	RJMP _0x202001E
                 _0x202001D:
00018d 940e 02fd 	CALL SUBOPT_0x2
                 _0x202001E:
00018f c10a      	RJMP _0x202001B
                 _0x202001C:
000190 30e1      	CPI  R30,LOW(0x1)
000191 f4a9      	BRNE _0x202001F
000192 3225      	CPI  R18,37
000193 f419      	BRNE _0x2020020
000194 940e 02fd 	CALL SUBOPT_0x2
000196 c102      	RJMP _0x20200CC
                 _0x2020020:
000197 e012      	LDI  R17,LOW(2)
000198 e040      	LDI  R20,LOW(0)
000199 e000      	LDI  R16,LOW(0)
00019a 322d      	CPI  R18,45
00019b f411      	BRNE _0x2020021
00019c e001      	LDI  R16,LOW(1)
00019d c0fc      	RJMP _0x202001B
                 _0x2020021:
00019e 322b      	CPI  R18,43
00019f f411      	BRNE _0x2020022
0001a0 e24b      	LDI  R20,LOW(43)
0001a1 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001a2 3220      	CPI  R18,32
0001a3 f411      	BRNE _0x2020023
0001a4 e240      	LDI  R20,LOW(32)
0001a5 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001a6 c002      	RJMP _0x2020024
                 _0x202001F:
0001a7 30e2      	CPI  R30,LOW(0x2)
0001a8 f439      	BRNE _0x2020025
                 _0x2020024:
0001a9 e050      	LDI  R21,LOW(0)
0001aa e013      	LDI  R17,LOW(3)
0001ab 3320      	CPI  R18,48
0001ac f411      	BRNE _0x2020026
0001ad 6800      	ORI  R16,LOW(128)
0001ae c0eb      	RJMP _0x202001B
                 _0x2020026:
0001af c003      	RJMP _0x2020027
                 _0x2020025:
0001b0 30e3      	CPI  R30,LOW(0x3)
0001b1 f009      	BREQ PC+2
0001b2 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001b3 3320      	CPI  R18,48
0001b4 f010      	BRLO _0x202002A
0001b5 332a      	CPI  R18,58
0001b6 f008      	BRLO _0x202002B
                 _0x202002A:
0001b7 c007      	RJMP _0x2020029
                 _0x202002B:
0001b8 e0aa      	LDI  R26,LOW(10)
0001b9 9f5a      	MUL  R21,R26
0001ba 2d50      	MOV  R21,R0
0001bb 2fe2      	MOV  R30,R18
0001bc 53e0      	SUBI R30,LOW(48)
0001bd 0f5e      	ADD  R21,R30
0001be c0db      	RJMP _0x202001B
                 _0x2020029:
0001bf 2fe2      	MOV  R30,R18
0001c0 36e3      	CPI  R30,LOW(0x63)
0001c1 f449      	BRNE _0x202002F
0001c2 940e 0304 	CALL SUBOPT_0x3
0001c4 89e8      	LDD  R30,Y+16
0001c5 89f9      	LDD  R31,Y+16+1
0001c6 81a4      	LDD  R26,Z+4
0001c7 93aa      	ST   -Y,R26
0001c8 940e 030a 	CALL SUBOPT_0x4
0001ca c0ce      	RJMP _0x2020030
                 _0x202002F:
0001cb 37e3      	CPI  R30,LOW(0x73)
0001cc f441      	BRNE _0x2020032
0001cd 940e 0304 	CALL SUBOPT_0x3
0001cf 940e 0310 	CALL SUBOPT_0x5
0001d1 940e 02d7 	CALL _strlen
0001d3 2f1e      	MOV  R17,R30
0001d4 c00a      	RJMP _0x2020033
                 _0x2020032:
0001d5 37e0      	CPI  R30,LOW(0x70)
0001d6 f461      	BRNE _0x2020035
0001d7 940e 0304 	CALL SUBOPT_0x3
0001d9 940e 0310 	CALL SUBOPT_0x5
0001db 940e 02e3 	CALL _strlenf
0001dd 2f1e      	MOV  R17,R30
0001de 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001df 6002      	ORI  R16,LOW(2)
0001e0 770f      	ANDI R16,LOW(127)
0001e1 e030      	LDI  R19,LOW(0)
0001e2 c034      	RJMP _0x2020036
                 _0x2020035:
0001e3 36e4      	CPI  R30,LOW(0x64)
0001e4 f011      	BREQ _0x2020039
0001e5 36e9      	CPI  R30,LOW(0x69)
0001e6 f411      	BRNE _0x202003A
                 _0x2020039:
0001e7 6004      	ORI  R16,LOW(4)
0001e8 c002      	RJMP _0x202003B
                 _0x202003A:
0001e9 37e5      	CPI  R30,LOW(0x75)
0001ea f431      	BRNE _0x202003C
                 _0x202003B:
0001eb e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001ec e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001ed 83ee      	STD  Y+6,R30
0001ee 83ff      	STD  Y+6+1,R31
0001ef e015      	LDI  R17,LOW(5)
0001f0 c00c      	RJMP _0x202003D
                 _0x202003C:
0001f1 35e8      	CPI  R30,LOW(0x58)
0001f2 f411      	BRNE _0x202003F
0001f3 6008      	ORI  R16,LOW(8)
0001f4 c003      	RJMP _0x2020040
                 _0x202003F:
0001f5 37e8      	CPI  R30,LOW(0x78)
0001f6 f009      	BREQ PC+2
0001f7 c0a1      	RJMP _0x2020071
                 _0x2020040:
0001f8 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001f9 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001fa 83ee      	STD  Y+6,R30
0001fb 83ff      	STD  Y+6+1,R31
0001fc e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001fd ff02      	SBRS R16,2
0001fe c014      	RJMP _0x2020042
0001ff 940e 0304 	CALL SUBOPT_0x3
000201 940e 031a 	CALL SUBOPT_0x6
000203 85ab      	LDD  R26,Y+11
000204 23aa      	TST  R26
000205 f43a      	BRPL _0x2020043
000206 85ea      	LDD  R30,Y+10
000207 85fb      	LDD  R31,Y+10+1
000208 940e 0337 	CALL __ANEGW1
00020a 87ea      	STD  Y+10,R30
00020b 87fb      	STD  Y+10+1,R31
00020c e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00020d 3040      	CPI  R20,0
00020e f011      	BREQ _0x2020044
00020f 5f1f      	SUBI R17,-LOW(1)
000210 c001      	RJMP _0x2020045
                 _0x2020044:
000211 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000212 c004      	RJMP _0x2020046
                 _0x2020042:
000213 940e 0304 	CALL SUBOPT_0x3
000215 940e 031a 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000217 fd00      	SBRC R16,0
000218 c011      	RJMP _0x2020047
                 _0x2020048:
000219 1715      	CP   R17,R21
00021a f478      	BRSH _0x202004A
00021b ff07      	SBRS R16,7
00021c c008      	RJMP _0x202004B
00021d ff02      	SBRS R16,2
00021e c004      	RJMP _0x202004C
00021f 7f0b      	ANDI R16,LOW(251)
000220 2f24      	MOV  R18,R20
000221 5011      	SUBI R17,LOW(1)
000222 c001      	RJMP _0x202004D
                 _0x202004C:
000223 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000224 c001      	RJMP _0x202004E
                 _0x202004B:
000225 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000226 940e 02fd 	CALL SUBOPT_0x2
000228 5051      	SUBI R21,LOW(1)
000229 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00022a 2f31      	MOV  R19,R17
00022b ff01      	SBRS R16,1
00022c c017      	RJMP _0x202004F
                 _0x2020050:
00022d 3030      	CPI  R19,0
00022e f0a1      	BREQ _0x2020052
00022f ff03      	SBRS R16,3
000230 c006      	RJMP _0x2020053
000231 81ee      	LDD  R30,Y+6
000232 81ff      	LDD  R31,Y+6+1
000233 9125      	LPM  R18,Z+
000234 83ee      	STD  Y+6,R30
000235 83ff      	STD  Y+6+1,R31
000236 c005      	RJMP _0x2020054
                 _0x2020053:
000237 81ae      	LDD  R26,Y+6
000238 81bf      	LDD  R27,Y+6+1
000239 912d      	LD   R18,X+
00023a 83ae      	STD  Y+6,R26
00023b 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00023c 940e 02fd 	CALL SUBOPT_0x2
00023e 3050      	CPI  R21,0
00023f f009      	BREQ _0x2020055
000240 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000241 5031      	SUBI R19,LOW(1)
000242 cfea      	RJMP _0x2020050
                 _0x2020052:
000243 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000244 e320      	LDI  R18,LOW(48)
000245 81ee      	LDD  R30,Y+6
000246 81ff      	LDD  R31,Y+6+1
000247 940e 033f 	CALL __GETW1PF
000249 87e8      	STD  Y+8,R30
00024a 87f9      	STD  Y+8+1,R31
00024b 81ee      	LDD  R30,Y+6
00024c 81ff      	LDD  R31,Y+6+1
00024d 9632      	ADIW R30,2
00024e 83ee      	STD  Y+6,R30
00024f 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000250 85e8      	LDD  R30,Y+8
000251 85f9      	LDD  R31,Y+8+1
000252 85aa      	LDD  R26,Y+10
000253 85bb      	LDD  R27,Y+10+1
000254 17ae      	CP   R26,R30
000255 07bf      	CPC  R27,R31
000256 f050      	BRLO _0x202005C
000257 5f2f      	SUBI R18,-LOW(1)
000258 85a8      	LDD  R26,Y+8
000259 85b9      	LDD  R27,Y+8+1
00025a 85ea      	LDD  R30,Y+10
00025b 85fb      	LDD  R31,Y+10+1
00025c 1bea      	SUB  R30,R26
00025d 0bfb      	SBC  R31,R27
00025e 87ea      	STD  Y+10,R30
00025f 87fb      	STD  Y+10+1,R31
000260 cfef      	RJMP _0x202005A
                 _0x202005C:
000261 332a      	CPI  R18,58
000262 f028      	BRLO _0x202005D
000263 ff03      	SBRS R16,3
000264 c002      	RJMP _0x202005E
000265 5f29      	SUBI R18,-LOW(7)
000266 c001      	RJMP _0x202005F
                 _0x202005E:
000267 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000268 fd04      	SBRC R16,4
000269 c01a      	RJMP _0x2020061
00026a 3321      	CPI  R18,49
00026b f420      	BRSH _0x2020063
00026c 85a8      	LDD  R26,Y+8
00026d 85b9      	LDD  R27,Y+8+1
00026e 9711      	SBIW R26,1
00026f f409      	BRNE _0x2020062
                 _0x2020063:
000270 c009      	RJMP _0x20200CD
                 _0x2020062:
000271 1753      	CP   R21,R19
000272 f010      	BRLO _0x2020067
000273 ff00      	SBRS R16,0
000274 c001      	RJMP _0x2020068
                 _0x2020067:
000275 c013      	RJMP _0x2020066
                 _0x2020068:
000276 e220      	LDI  R18,LOW(32)
000277 ff07      	SBRS R16,7
000278 c00b      	RJMP _0x2020069
000279 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00027a 6100      	ORI  R16,LOW(16)
00027b ff02      	SBRS R16,2
00027c c007      	RJMP _0x202006A
00027d 7f0b      	ANDI R16,LOW(251)
00027e 934a      	ST   -Y,R20
00027f 940e 030a 	CALL SUBOPT_0x4
000281 3050      	CPI  R21,0
000282 f009      	BREQ _0x202006B
000283 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000284 940e 02fd 	CALL SUBOPT_0x2
000286 3050      	CPI  R21,0
000287 f009      	BREQ _0x202006C
000288 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000289 5031      	SUBI R19,LOW(1)
00028a 85a8      	LDD  R26,Y+8
00028b 85b9      	LDD  R27,Y+8+1
00028c 9712      	SBIW R26,2
00028d f008      	BRLO _0x2020059
00028e cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00028f ff00      	SBRS R16,0
000290 c008      	RJMP _0x202006D
                 _0x202006E:
000291 3050      	CPI  R21,0
000292 f031      	BREQ _0x2020070
000293 5051      	SUBI R21,LOW(1)
000294 e2e0      	LDI  R30,LOW(32)
000295 93ea      	ST   -Y,R30
000296 940e 030a 	CALL SUBOPT_0x4
000298 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000299 e010      	LDI  R17,LOW(0)
                 _0x202001B:
00029a cee0      	RJMP _0x2020016
                 _0x2020018:
00029b 85ac      	LDD  R26,Y+12
00029c 85bd      	LDD  R27,Y+12+1
00029d 940e 033b 	CALL __GETW1P
00029f 940e 034f 	CALL __LOADLOCR6
0002a1 9664      	ADIW R28,20
0002a2 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002a3 92ff      	PUSH R15
0002a4 2ef8      	MOV  R15,R24
0002a5 9726      	SBIW R28,6
0002a6 940e 034a 	CALL __SAVELOCR4
0002a8 940e 0322 	CALL SUBOPT_0x7
0002aa 9730      	SBIW R30,0
0002ab f419      	BRNE _0x2020072
0002ac efef      	LDI  R30,LOW(65535)
0002ad efff      	LDI  R31,HIGH(65535)
0002ae c023      	RJMP _0x2080001
                 _0x2020072:
0002af 01de      	MOVW R26,R28
0002b0 9616      	ADIW R26,6
0002b1 940e 0333 	CALL __ADDW2R15
0002b3 018d      	MOVW R16,R26
0002b4 940e 0322 	CALL SUBOPT_0x7
0002b6 83ee      	STD  Y+6,R30
0002b7 83ff      	STD  Y+6+1,R31
0002b8 e0e0      	LDI  R30,LOW(0)
0002b9 87e8      	STD  Y+8,R30
0002ba 87e9      	STD  Y+8+1,R30
0002bb 01de      	MOVW R26,R28
0002bc 961a      	ADIW R26,10
0002bd 940e 0333 	CALL __ADDW2R15
0002bf 940e 033b 	CALL __GETW1P
0002c1 93fa      	ST   -Y,R31
0002c2 93ea      	ST   -Y,R30
0002c3 931a      	ST   -Y,R17
0002c4 930a      	ST   -Y,R16
0002c5 e2ef      	LDI  R30,LOW(_put_buff_G101)
0002c6 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002c7 93fa      	ST   -Y,R31
0002c8 93ea      	ST   -Y,R30
0002c9 01de      	MOVW R26,R28
0002ca 961a      	ADIW R26,10
0002cb dea3      	RCALL __print_G101
0002cc 019f      	MOVW R18,R30
0002cd 81ae      	LDD  R26,Y+6
0002ce 81bf      	LDD  R27,Y+6+1
0002cf e0e0      	LDI  R30,LOW(0)
0002d0 93ec      	ST   X,R30
0002d1 01f9      	MOVW R30,R18
                 _0x2080001:
0002d2 940e 0351 	CALL __LOADLOCR4
0002d4 962a      	ADIW R28,10
0002d5 90ff      	POP  R15
0002d6 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002d7 93ba      	ST   -Y,R27
0002d8 93aa      	ST   -Y,R26
0002d9 91a9          ld   r26,y+
0002da 91b9          ld   r27,y+
0002db 27ee          clr  r30
0002dc 27ff          clr  r31
                 strlen0:
0002dd 916d          ld   r22,x+
0002de 2366          tst  r22
0002df f011          breq strlen1
0002e0 9631          adiw r30,1
0002e1 cffb          rjmp strlen0
                 strlen1:
0002e2 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e3 93ba      	ST   -Y,R27
0002e4 93aa      	ST   -Y,R26
0002e5 27aa          clr  r26
0002e6 27bb          clr  r27
0002e7 91e9          ld   r30,y+
0002e8 91f9          ld   r31,y+
                 strlenf0:
0002e9 9005      	lpm  r0,z+
0002ea 2000          tst  r0
0002eb f011          breq strlenf1
0002ec 9611          adiw r26,1
0002ed cffb          rjmp strlenf0
                 strlenf1:
0002ee 01fd          movw r30,r26
0002ef 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _Buf:
00026f           	.BYTE 0x20
                 __base_y_G100:
00028f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002f0 940e 00b7 	CALL __lcd_write_data
0002f2 e0a3      	LDI  R26,LOW(3)
0002f3 e0b0      	LDI  R27,0
0002f4 940c 0329 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
0002f6 e3a0      	LDI  R26,LOW(48)
0002f7 940e 00a3 	CALL __lcd_write_nibble_G100
                +
0002f9 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0002fa 958a     +DEC R24
0002fb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0002fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
0002fd 932a      	ST   -Y,R18
0002fe 85ad      	LDD  R26,Y+13
0002ff 85be      	LDD  R27,Y+13+1
000300 85ef      	LDD  R30,Y+15
000301 89f8      	LDD  R31,Y+15+1
000302 9509      	ICALL
000303 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000304 89e8      	LDD  R30,Y+16
000305 89f9      	LDD  R31,Y+16+1
000306 9734      	SBIW R30,4
000307 8be8      	STD  Y+16,R30
000308 8bf9      	STD  Y+16+1,R31
000309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00030a 85ad      	LDD  R26,Y+13
00030b 85be      	LDD  R27,Y+13+1
00030c 85ef      	LDD  R30,Y+15
00030d 89f8      	LDD  R31,Y+15+1
00030e 9509      	ICALL
00030f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000310 89a8      	LDD  R26,Y+16
000311 89b9      	LDD  R27,Y+16+1
000312 9614      	ADIW R26,4
000313 940e 033b 	CALL __GETW1P
000315 83ee      	STD  Y+6,R30
000316 83ff      	STD  Y+6+1,R31
000317 81ae      	LDD  R26,Y+6
000318 81bf      	LDD  R27,Y+6+1
000319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00031a 89a8      	LDD  R26,Y+16
00031b 89b9      	LDD  R27,Y+16+1
00031c 9614      	ADIW R26,4
00031d 940e 033b 	CALL __GETW1P
00031f 87ea      	STD  Y+10,R30
000320 87fb      	STD  Y+10+1,R31
000321 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000322 01de      	MOVW R26,R28
000323 961c      	ADIW R26,12
000324 940e 0333 	CALL __ADDW2R15
000326 940e 033b 	CALL __GETW1P
000328 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000329 9610      	adiw r26,0
00032a f039      	breq __delay_ms1
                 __delay_ms0:
00032b 95a8      	wdr
                +
00032c ef8a     +LDI R24 , LOW ( 0xFA )
00032d e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00032e 9701     +SBIW R24 , 1
00032f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000330 9711      	sbiw r26,1
000331 f7c9      	brne __delay_ms0
                 __delay_ms1:
000332 9508      	ret
                 
                 __ADDW2R15:
000333 2400      	CLR  R0
000334 0daf      	ADD  R26,R15
000335 1db0      	ADC  R27,R0
000336 9508      	RET
                 
                 __ANEGW1:
000337 95f1      	NEG  R31
000338 95e1      	NEG  R30
000339 40f0      	SBCI R31,0
00033a 9508      	RET
                 
                 __GETW1P:
00033b 91ed      	LD   R30,X+
00033c 91fc      	LD   R31,X
00033d 9711      	SBIW R26,1
00033e 9508      	RET
                 
                 __GETW1PF:
00033f 9005      	LPM  R0,Z+
000340 91f4      	LPM  R31,Z
000341 2de0      	MOV  R30,R0
000342 9508      	RET
                 
                 __PUTPARD1:
000343 937a      	ST   -Y,R23
000344 936a      	ST   -Y,R22
000345 93fa      	ST   -Y,R31
000346 93ea      	ST   -Y,R30
000347 9508      	RET
                 
                 __SAVELOCR6:
000348 935a      	ST   -Y,R21
                 __SAVELOCR5:
000349 934a      	ST   -Y,R20
                 __SAVELOCR4:
00034a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00034b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00034c 931a      	ST   -Y,R17
00034d 930a      	ST   -Y,R16
00034e 9508      	RET
                 
                 __LOADLOCR6:
00034f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000350 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000351 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000352 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000353 8119      	LDD  R17,Y+1
000354 8108      	LD   R16,Y
000355 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   3 r26: 101 r27:  41 r28:  14 r29:   1 r30: 147 r31:  58 
x  :  23 y  : 166 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  50 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   3 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  91 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :   8 pop   :   1 push  :   1 rcall :  22 ret   :  24 
reti  :   0 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006ac   1650     58   1708   32768   5.2%
[.dseg] 0x000060 0x000293      0     51     51    2048   2.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
