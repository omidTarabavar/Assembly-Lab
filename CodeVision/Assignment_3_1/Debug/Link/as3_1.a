;/*
; * as3_1.c
; *
; * Created: 11/24/2024 2:57:44 PM
; * Author: omidt
; */
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;unsigned char scan[4]={0XFE,0XFD,0XFB,0XF7};

	.DSEG
;char Key;
;char arrkey[16]={
;'7','8','9','/',
;'4','5','6','*',
;'1','2','3','-',
;'C','0','=','+'};
;#define c1 PINB.4
;#define c2 PINB.5
;#define c3 PINB.6
;#define c4 PINB.7
;#define keypad_port PORTB
;char keypad(){
; 0000 0016 char keypad(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0017 unsigned char r,c,k;
; 0000 0018 
; 0000 0019 while(1){
;PCODE: $0000000F VOL: 0
;	r -> R17
;	c -> R16
;	k -> R19
;PCODE: $00000010 VOL: 0
; 0000 001A for (r=0; r<4; r++){
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001B c=255;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001C keypad_port=scan[r];
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001D delay_us(10);
;PCODE: $00000021 VOL: 0
; 0000 001E if(c1==0) c=0; if(c2==0) c=1; if(c3==0) c=2; if(c4==0) c=3;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 001F if (c!=255){
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0020 k=arrkey[(r*4)+c];
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0021 while(c1==0); while(c2==0); while(c3==0); while(c4==0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0022 delay_ms(50);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0023 return k;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0024 }}}}
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0026 {
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0027 // Place your code here
; 0000 0028     #asm("cli")
;PCODE: $00000072 VOL: 0
	cli
;PCODE: $00000073 VOL: 0
; 0000 0029 
; 0000 002A        Key=keypad();
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 002B        if (Key == 'C') lcd_clear();
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 002C         else lcd_putchar(Key);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 002D 
; 0000 002E       #asm("sei")
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
	sei
;PCODE: $00000080 VOL: 0
; 0000 002F }
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;void main(void){
; 0000 0030 void main(void){
;PCODE: $00000084 VOL: 0
; 0000 0031 lcd_init(16);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0032 lcd_clear();
;PCODE: $00000087 VOL: 0
; 0000 0033 lcd_puts("Start");
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0034 delay_ms(1000);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0035 lcd_clear();
;PCODE: $0000008D VOL: 0
; 0000 0036 
; 0000 0037 while (1){
;PCODE: $0000008E VOL: 0
; 0000 0038 //Key=keypad();
; 0000 0039 DDRB=0X0F;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 003A keypad_port=0XF0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 003B 
; 0000 003C }}
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0

	.DSEG
_0x1E:
	.BYTE 0x6
